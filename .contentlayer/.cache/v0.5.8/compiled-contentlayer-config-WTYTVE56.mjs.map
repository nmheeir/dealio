{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import type { ComputedFields } from 'contentlayer2/source-files';\r\nimport {\r\n\r\n  defineDocumentType,\r\n  makeSource,\r\n} from 'contentlayer2/source-files';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\nimport rehypeCodeTitles from 'rehype-code-titles';\r\nimport rehypePrettyCode from 'rehype-pretty-code';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport { codeImport } from 'remark-code-import';\r\n\r\nconst computedFields: ComputedFields = {\r\n  slug: {\r\n    type: 'string',\r\n    resolve: doc => `/${doc._raw.flattenedPath}`,\r\n  },\r\n  slugAsParams: {\r\n    type: 'string',\r\n    resolve: doc => doc._raw.flattenedPath.split('/').slice(1).join('/'),\r\n  },\r\n  readingTime: {\r\n    type: 'number',\r\n    resolve: (doc) => {\r\n      const content = doc.body.raw as string;\r\n      const wordsPerMinute = 200;\r\n      const numberOfWords = content.split(/\\s/g).length;\r\n      const minutes = numberOfWords / wordsPerMinute;\r\n      return Math.ceil(minutes);\r\n    },\r\n  },\r\n};\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `blog/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      required: true,\r\n    },\r\n    published: {\r\n      type: 'boolean',\r\n      default: true,\r\n    },\r\n    image: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    authors: {\r\n      // Reference types are not embedded.\r\n      // Until this is fixed, we can use a simple list.\r\n      // type: \"reference\",\r\n      // of: Author,\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields,\r\n}));\r\n\r\nexport const Author = defineDocumentType(() => ({\r\n  name: 'Author',\r\n  filePathPattern: `authors/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n    },\r\n    avatar: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    twitter: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields,\r\n}));\r\n\r\nexport const Page = defineDocumentType(() => ({\r\n  name: 'Page',\r\n  filePathPattern: `pages/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n    },\r\n  },\r\n  computedFields,\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: './src/content',\r\n  documentTypes: [Page],\r\n  mdx: {\r\n    remarkPlugins: [codeImport],\r\n    rehypePlugins: [\r\n      [\r\n        rehypePrettyCode,\r\n        {\r\n          theme: {\r\n            dark: 'one-dark-pro',\r\n            light: 'github-light',\r\n          },\r\n          defaultLang: {\r\n            block: 'typescript',\r\n          },\r\n        },\r\n      ],\r\n      rehypeAutolinkHeadings,\r\n      rehypeSlug,\r\n      rehypeCodeTitles,\r\n    ],\r\n  },\r\n});\r\n"],
  "mappings": ";AACA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,SAAS,kBAAkB;AAE3B,IAAM,iBAAiC;AAAA,EACrC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,SAAO,IAAI,IAAI,KAAK,aAAa;AAAA,EAC5C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,SAAO,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACrE;AAAA,EACA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ;AAChB,YAAM,UAAU,IAAI,KAAK;AACzB,YAAM,iBAAiB;AACvB,YAAM,gBAAgB,QAAQ,MAAM,KAAK,EAAE;AAC3C,YAAM,UAAU,gBAAgB;AAChC,aAAO,KAAK,KAAK,OAAO;AAAA,IAC1B;AAAA,EACF;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAKP,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEK,IAAM,SAAS,mBAAmB,OAAO;AAAA,EAC9C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,UAAU;AAAA,IAC1B,eAAe;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,MAAM;AAAA,YACN,OAAO;AAAA,UACT;AAAA,UACA,aAAa;AAAA,YACX,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
