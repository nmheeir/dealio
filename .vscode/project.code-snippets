{
  "useQuery with variables": {
    "prefix": "useqv",
    "body": [
      "import type { AxiosError } from 'axios';",
      "import { createQuery } from 'react-query-kit';",
      "",
      "import apiClient from '../common';",
      "",
      "type Variables = {$3};",
      "type Response = {$4};",
      "",
      "export const use$1 = createQuery<Response, Variables, AxiosError>({",
      "  queryKey: ['$2'], ",
      "  fetcher: (variables) => {",
      "    return apiClient",
      "      .get(`$2/\\${variables.${5}}`)",
      "      .then((response) => response.data);",
      "  },",
      "});",
      "",
    ],
    "description": "useQuery with variables",
  },
   "useQuery": {
    "prefix": "useq",
    "body": [
      "import type { AxiosError } from 'axios';",
      "import { createQuery } from 'react-query-kit';",
      "",
      "import apiClient from '../common';",
      "",
      "type Response = {$3};",
      "type Variables = void;",
      "",
      "export const use$1 = createQuery<Response, Variables, AxiosError>({",
      "  queryKey: ['$2'],",
      "  fetcher: () => {",
      "    return apiClient.get(`$2`).then((response) => response.data);",
      "  },",
      "});",
      "",
    ],
    "description": "useQuery",
  },
  "useMutation ": {
    "prefix": "usem",
    "body": [
      "import type { AxiosError } from 'axios';",
      "import { createMutation } from 'react-query-kit';",
      "",
      "import apiClient from '../common';",
      "",
      "type Variables = {$3};",
      "type Response = {$4};",
      "",
      "export const use$1 = createMutation<Response, Variables, AxiosError>({",
      "  mutationFn: async (variables) =>",
      "    apiClient({",
      "      url: '$2',",
      "      method: 'POST',",
      "      data: variables,",
      "    }).then((response) => response.data)",
      "});",
    ],
    "description": "useMutation ",
  },
  "useInfiniteQuery": {
    "prefix": "useiq",
    "body": [
      "import type { AxiosError } from 'axios';",
      "import { createInfiniteQuery } from 'react-query-kit';",
      "",
      "import apiClient from '../common/apiClient';",
      "import { DEFAULT_LIMIT, getNextPageParam } from '../common/utils';",
      "import type { PaginateQuery } from '../types';",
      "",
      "type Response = void;",
      "type Variables = PaginateQuery<$3>;",
      "",
      "export const use$1 = createInfiniteQuery<Response, Variables, AxiosError>({",
      "  queryKey: ['$2'],",
      "  fetcher: (_variables: any, { pageParam }): Promise<Response> => {",
      "    return apiClient({",
      "      url: `/$2/`,",
      "      method: 'GET',",
      "      params: {",
      "        limit: DEFAULT_LIMIT,",
      "        offset: pageParam,",
      "      },",
      "    }).then((response) => response.data);",
      "  },",
      "  getNextPageParam,",
      "  initialPageParam: 0,",
      "});",
    ],
    "description": "useInfiniteQuery",
  },
}